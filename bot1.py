import telebot
from telebot import types
import webbrowser
import sqlite3

bot = telebot.TeleBot('6418994897:AAGHN6QoTZB8Wzya5j3nQexlDVqpWLzxfVw')
# –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ–ø–∏—Å–∞–Ω–Ω–∞ —Ä–∞–±–æ—Ç–∞ —Å —Å–µ—Ä–≤–µ—Ä–æ–º SQL

# @bot.message_handler(commands=['start'])
# def start(message):
#     bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —Å–µ–π—á–∞—Å —Ç–µ–±—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º! –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è')
#     bot.register_next_step_handler(message, user_name)
#
# def user_name(message):
#     name = message.text.strip()
#     bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å')
#     bot.register_next_step_handler(message, user_pass, name)
#
# def user_pass(message, name):
#     password = message.text.strip()
#     conn = sqlite3.connect('bottel1.sql')
#     cur = conn.cursor()
#
#     cur.execute("CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT, pass TEXT)")
#     cur.execute("INSERT INTO users (name, pass) VALUES (?, ?)", (name, password))
#     conn.commit()
#     cur.close()
#     conn.close()
#
#     markup = types.InlineKeyboardMarkup()
#     markup.add(types.InlineKeyboardButton('–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', callback_data='users'))
#
#     bot.send_message(message.chat.id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!", reply_markup=markup)
#
#
# @bot.callback_query_handler(func=lambda call: True)
# def callback(call):
#     conn = sqlite3.connect('bottel1.sql')
#     cur = conn.cursor()
#     cur.execute("SELECT * FROM users")
#     users =  cur.fetchall()
#
#     info = ''
#     for el in users:
#         info += f'–ò–º—è: {el[1]}, –ø–∞—Ä–æ–ª—å: {el[2]}\n'
#
#
#     cur.close()
#     conn.close()
#
#     bot.send_message(call.message.chat.id, info)
#
#
#
# bot.polling()



# –û–±—ã—á–Ω—ã–π –±–æ—Ç –≥–¥–µ –≤—Å–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–æ

# bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å')
# bot.register_next_step_handler(message, user_pass)

#–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤–Ω–∞—á–∞–ª–µ
# @bot.message_handler(commands=['start'])
# def start(message):
#     markup = types.ReplyKeyboardMarkup()
#     btn1 = types.KeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç‚òùüèª')
#     markup.row(btn1)
#     btn2 = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ')
#     btn3 = types.KeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç')
#     markup.row(btn2, btn3)
#     file = open('./bonito2.jpg', 'rb')
#     bot.send_photo(message.chat.id, file,reply_markup=markup)
#     # bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –º–æ–π –ú–µ–Ω—Ç–æ—Ä! , {message.from_user.first_name} {message.from_user.last_name}', reply_markup=markup)
#     bot.register_next_step_handler(message, on_click)
#
# def on_click(message):
#     if message.text == '–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç':
#         bot.send_message(message.chat.id, 'Website is open')
#     elif message.text == '–£–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ':
#         bot.send_message(message.chat.id, 'Deleted')
#
# # C–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä –≤–∏–¥–∞ –∫–Ω–æ–ø–æ–∫
# @bot.message_handler(content_types=['photo'])
# def get_photo(message):
#     markup = types.InlineKeyboardMarkup()
#     btn1 =(types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç', url='https://vk.com/bonitodeti'))
#     markup.row(btn1)
#     btn2 = (types.InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ', callback_data='delete'))
#     btn3 = (types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç', callback_data='edit'))
#     markup.row(btn2,btn3)
#
#     bot.reply_to(message, '–ö–∞–∫–æ–µ –∫—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ—Ç–æ!',reply_markup=markup)
#
# # —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback_data
# @bot.callback_query_handler(func=lambda callback: True)
# def callback_massage(callback):
#     if callback.data == 'delete':
#         bot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
#     elif callback.data == 'edit':
#         bot.edit_message_text('Edit text',callback.message.chat.id, callback.message.message_id )
#
#
#
# # –í—ã–≤–æ–¥ —Å–∞–π—Ç–∞(—Å—Å—ã–ª–∫–∏)
# @bot.message_handler(commands=['site', 'website'])
# def site(message):
#     webbrowser.open('https://vk.com/bonitodeti')
#
#
# @bot.message_handler(commands=['start','main','Hello'])
# def main(message):
#     bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –º–æ–π –ú–µ–Ω—Ç–æ—Ä‚úåÔ∏è! , {message.from_user.first_name} {message.from_user.last_name} ')
#
# @bot.message_handler(commands=['help'])
# def main(message):
#     bot.send_message(message.chat.id, 'Help Information',parse_mode='html')
#
#
#
# @bot.message_handler()
# def info(message):
#     if message.text.lower() == '–ø—Ä–∏–≤–µ—Ç':
#         bot.send_message(massage.chat.id,
#                          f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –º–æ–π –ú–µ–Ω—Ç–æ—Ä!, {message.from_user.first_name} {message.from_user.last_name} ')
#     elif message.text.lower() == 'id':
#         bot.reply_to(message, f'ID: {message.from_user.id}')
#     elif message.text.lower() == '/start':
#         bot.send_message(massage.chat.id,
#                          f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –º–æ–π –ú–µ–Ω—Ç–æ—Ä!, {message.from_user.first_name} {message.from_user.last_name} ')
#
#
#
# bot.polling(none_stop=True)